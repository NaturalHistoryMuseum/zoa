{"version":3,"file":"Checkbox-3e4d7fad.js","sources":["../../src/components/inputs/checkbox/Checkbox.vue"],"sourcesContent":["<template>\n  <label\n    :id=\"componentId\"\n    :for=\"subId('checkbox')\"\n    :class=\"[$style.grid, $style[`grid--${labelPosition}`]]\"\n    tabindex=\"0\"\n    ref=\"checkbox\"\n  >\n    <span\n      v-if=\"label && labelPosition !== 'none'\"\n      :class=\"[$style.label, $style[`label--${labelPosition}`]]\"\n    >\n      {{ label }}\n    </span>\n    <input\n      type=\"checkbox\"\n      :id=\"subId('checkbox')\"\n      :class=\"$style.defaultCheckbox\"\n      v-model=\"value\"\n    />\n    <span :class=\"$style.checkbox\">\n      <font-awesome-icon icon=\"fa-solid fa-check\" :class=\"$style.check\" />\n    </span>\n  </label>\n</template>\n\n<script setup>\nimport { useComponentId } from '../../utils/compid.js';\nimport FontAwesomeIcon from '../../../icons.js';\nimport { useChangeEmits } from '../common.js';\nimport { useFocusWithin, onKeyStroke } from '@vueuse/core';\nimport { ref } from 'vue';\n\nconst props = defineProps({\n  /**\n   * @model\n   */\n  modelValue: {\n    type: Boolean,\n    default: undefined,\n  },\n  /**\n   * Text for the input label.\n   */\n  label: {\n    type: String,\n    default: 'Checkbox',\n  },\n  /**\n   * Position of the input label (or none).\n   * @values left, right, above, below, none\n   */\n  labelPosition: {\n    type: String,\n    default: 'left',\n  },\n  /**\n   * Debounce delay for the `change` event, in ms.\n   */\n  delay: {\n    type: Number,\n    default: 0,\n  },\n});\n\nconst { componentId, subId } = useComponentId();\n\nconst emit = defineEmits([\n  /**\n   * Emitted when the value changes; debounced if the delay prop is > 0.\n   * @arg {boolean} newValue the new value\n   */\n  'change',\n  /**\n   * @ignore\n   */\n  'update:modelValue',\n]);\nconst { value } = useChangeEmits(emit, props);\n\nconst checkbox = ref(null);\nconst focus = useFocusWithin(checkbox);\n\nonKeyStroke('Enter', () => {\n  if (focus.focused.value) {\n    value.value = !value.value;\n  }\n});\n</script>\n\n<style module lang=\"scss\">\n@import '../inputs';\n\n.grid {\n  width: min-content;\n  justify-items: center;\n\n  &.grid--left,\n  &.grid--right {\n    grid-template-columns: min-content min-content;\n  }\n}\n\n.defaultCheckbox {\n  display: none;\n}\n\n.label {\n  cursor: pointer;\n}\n\n.checkbox {\n  height: 1.5em;\n  width: 1.5em;\n  cursor: pointer;\n  background: white;\n  border: 1px solid $grey;\n  border-radius: $rounding;\n  position: relative;\n\n  .defaultCheckbox:checked ~ & {\n    background: $primary-a;\n\n    & > .check {\n      display: block;\n    }\n  }\n}\n\n.check {\n  display: none;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  margin: auto;\n}\n</style>\n"],"names":["componentId","subId","useComponentId","value","useChangeEmits","emit","props","checkbox","ref","focus","useFocusWithin","onKeyStroke"],"mappings":"8jCAiEM,CAAE,YAAAA,EAAa,MAAAC,GAAUC,IAazB,CAAE,MAAAC,CAAK,EAAKC,EAAeC,EAAMC,CAAK,EAEtCC,EAAWC,EAAI,IAAI,EACnBC,EAAQC,EAAeH,CAAQ,EAErC,OAAAI,EAAY,QAAS,IAAM,CACrBF,EAAM,QAAQ,QAChBN,EAAM,MAAQ,CAACA,EAAM,MAEzB,CAAC"}