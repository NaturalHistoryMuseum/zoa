{"version":3,"file":"RangeSlider-32943fa4.js","sources":["../../src/components/inputs/slider/RangeSlider.vue"],"sourcesContent":["<template>\n  <div\n    :class=\"[$style.grid, $style[`grid--${labelPosition}`]]\"\n    :id=\"componentId\"\n  >\n    <label\n      v-if=\"label && labelPosition !== 'none'\"\n      :class=\"[$style.label, $style[`label--${labelPosition}`]]\"\n    >\n      {{ label }}\n    </label>\n    <div :class=\"$style.wrapper\">\n      <div :class=\"$style.slider\">\n        <span :class=\"$style.track\"></span>\n        <span\n          :class=\"[$style.track, $style['track--active']]\"\n          :style=\"{\n            left: `${handleLower.handle}%`,\n            right: `${100 - handleUpper.handle}%`,\n          }\"\n        ></span>\n        <label\n          :for=\"subId('range-slider-lower')\"\n          :class=\"$style.valueLabel\"\n          :style=\"{ left: `${handleLower.label}%` }\"\n          ref=\"labelLower\"\n          >{{ valueLower }}</label\n        >\n        <label\n          :for=\"subId('range-slider-upper')\"\n          :class=\"$style.valueLabel\"\n          :style=\"{ left: `${handleUpper.label}%` }\"\n          ref=\"labelUpper\"\n          >{{ valueUpper }}</label\n        >\n        <input\n          type=\"range\"\n          :min=\"min\"\n          :max=\"max\"\n          :step=\"step\"\n          :id=\"subId('range-slider-lower')\"\n          :class=\"$style.input\"\n          v-model=\"valueLower\"\n          ref=\"sliderLower\"\n        />\n        <input\n          type=\"range\"\n          :min=\"min\"\n          :max=\"max\"\n          :step=\"step\"\n          :id=\"subId('range-slider-upper')\"\n          :class=\"$style.input\"\n          v-model=\"valueUpper\"\n          ref=\"sliderUpper\"\n        />\n      </div>\n      <span :class=\"$style.trackLabel\">{{ valueUpper - valueLower }}</span>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { useComponentId } from '../../utils/compid.js';\nimport { useChangeEmits } from '../common.js';\nimport { computed, ref, watch } from 'vue';\nimport { getFraction, getHandlePosition, getInitialValue } from './slider.js';\n\nconst props = defineProps({\n  modelValue: {},\n  labelPosition: {\n    type: String,\n    default: 'above',\n  },\n  label: {\n    type: String,\n    default: 'Range',\n  },\n  delay: {\n    type: Number,\n    default: 200,\n  },\n  placeholder: {\n    type: Number,\n    default: 0,\n  },\n  min: {\n    type: Number,\n    default: 0,\n  },\n  max: {\n    type: Number,\n    default: 100,\n  },\n  step: {\n    type: Number,\n    default: 1,\n  },\n});\n\nconst { componentId, subId } = useComponentId();\n\nconst emit = defineEmits(['change', 'update:modelValue']);\nconst { valueChanged } = useChangeEmits(emit, props);\n\nconst sliderLower = ref(null);\nconst sliderUpper = ref(null);\nconst labelLower = ref(null);\nconst labelUpper = ref(null);\n\nconst valueLower = ref(null);\nconst valueUpper = ref(null);\n\nconst maxLower = computed(() => {\n  return Math.max(\n    Number(valueUpper.value) - Number(props.step),\n    Number(props.min),\n  );\n});\nconst minUpper = computed(() => {\n  return Math.min(\n    Number(valueLower.value) + Number(props.step),\n    Number(props.max),\n  );\n});\n\nconst range = computed(() => {\n  // never return a lower value that's higher than the upper value or vice versa\n  const lower = Math.min(valueLower.value, maxLower.value);\n  const upper = Math.max(valueUpper.value, minUpper.value);\n  return [lower, upper];\n});\n\nconst fractionLower = computed(() => getFraction(valueLower.value, props));\nconst fractionUpper = computed(() => getFraction(valueUpper.value, props));\n\n// the slider passed into this function doesn't really matter because it's just\n// to get the width (which should be the same for both)\nconst handleLower = computed(() =>\n  getHandlePosition(sliderLower.value, fractionLower.value, labelLower.value),\n);\nconst handleUpper = computed(() =>\n  getHandlePosition(sliderUpper.value, fractionUpper.value, labelUpper.value),\n);\n\n// set initial values\nvalueLower.value = getInitialValue(props) - props.step;\nvalueUpper.value = getInitialValue(props) + props.step;\n\nwatch(valueLower, (newValue) => {\n  if (Number(newValue) >= Number(valueUpper.value)) {\n    valueLower.value = maxLower.value;\n  }\n});\n\nwatch(valueUpper, (newValue) => {\n  if (Number(newValue) <= Number(valueLower.value)) {\n    valueUpper.value = minUpper.value;\n  }\n});\n\nwatch(range, () => {\n  valueChanged(range.value);\n});\n</script>\n\n<style module lang=\"scss\">\n@import '../inputs';\n\n.input {\n  appearance: none;\n  -webkit-appearance: none;\n  width: 100%;\n  cursor: pointer;\n  background: transparent;\n  padding: 0;\n  outline: 0;\n  height: 10px;\n  border: none;\n  position: absolute;\n  pointer-events: none;\n\n  &::-webkit-slider-thumb,\n  &::-moz-range-thumb {\n    appearance: none;\n    -webkit-appearance: none;\n    width: 20px;\n    height: 20px;\n    background: $primary;\n    cursor: pointer;\n    border-radius: 100%;\n    z-index: 100;\n    pointer-events: all;\n  }\n}\n\n.trackLabel {\n  background: white;\n  font-size: 0.8em;\n  text-align: center;\n  margin-top: -4px;\n}\n\n.wrapper {\n  display: grid;\n  grid-template-columns: 1fr minmax(auto, 30px);\n  align-items: center;\n  grid-gap: $h-pad;\n  height: 100%;\n}\n\n.slider {\n  position: relative;\n  height: 100%;\n}\n\n.track {\n  position: absolute;\n  top: 30%;\n  bottom: 30%;\n  left: 2px;\n  right: -2px;\n  background: $grey;\n\n  &.track--active {\n    background: $secondary;\n  }\n}\n\n.valueLabel {\n  position: absolute;\n  top: 1.5em;\n  font-size: 0.8em;\n  padding: $half-pad;\n  border: 1px solid $grey;\n  border-radius: $rounding;\n  background: white;\n}\n</style>\n"],"names":["componentId","subId","useComponentId","valueChanged","useChangeEmits","emit","props","sliderLower","ref","sliderUpper","labelLower","labelUpper","valueLower","valueUpper","maxLower","computed","minUpper","range","lower","upper","fractionLower","getFraction","fractionUpper","handleLower","getHandlePosition","handleUpper","getInitialValue","watch","newValue"],"mappings":"+yCAmGM,CAAE,YAAAA,EAAa,MAAAC,GAAUC,IAGzB,CAAE,aAAAC,CAAY,EAAKC,EAAeC,EAAMC,CAAK,EAE7CC,EAAcC,EAAI,IAAI,EACtBC,EAAcD,EAAI,IAAI,EACtBE,EAAaF,EAAI,IAAI,EACrBG,EAAaH,EAAI,IAAI,EAErBI,EAAaJ,EAAI,IAAI,EACrBK,EAAaL,EAAI,IAAI,EAErBM,EAAWC,EAAS,IACjB,KAAK,IACV,OAAOF,EAAW,KAAK,EAAI,OAAOP,EAAM,IAAI,EAC5C,OAAOA,EAAM,GAAG,CACpB,CACC,EACKU,EAAWD,EAAS,IACjB,KAAK,IACV,OAAOH,EAAW,KAAK,EAAI,OAAON,EAAM,IAAI,EAC5C,OAAOA,EAAM,GAAG,CACpB,CACC,EAEKW,EAAQF,EAAS,IAAM,CAE3B,MAAMG,EAAQ,KAAK,IAAIN,EAAW,MAAOE,EAAS,KAAK,EACjDK,EAAQ,KAAK,IAAIN,EAAW,MAAOG,EAAS,KAAK,EACvD,MAAO,CAACE,EAAOC,CAAK,CACtB,CAAC,EAEKC,EAAgBL,EAAS,IAAMM,EAAYT,EAAW,MAAON,CAAK,CAAC,EACnEgB,EAAgBP,EAAS,IAAMM,EAAYR,EAAW,MAAOP,CAAK,CAAC,EAInEiB,EAAcR,EAAS,IAC3BS,EAAkBjB,EAAY,MAAOa,EAAc,MAAOV,EAAW,KAAK,CAC5E,EACMe,EAAcV,EAAS,IAC3BS,EAAkBf,EAAY,MAAOa,EAAc,MAAOX,EAAW,KAAK,CAC5E,EAGA,OAAAC,EAAW,MAAQc,EAAgBpB,CAAK,EAAIA,EAAM,KAClDO,EAAW,MAAQa,EAAgBpB,CAAK,EAAIA,EAAM,KAElDqB,EAAMf,EAAagB,GAAa,CAC1B,OAAOA,CAAQ,GAAK,OAAOf,EAAW,KAAK,IAC7CD,EAAW,MAAQE,EAAS,MAEhC,CAAC,EAEDa,EAAMd,EAAae,GAAa,CAC1B,OAAOA,CAAQ,GAAK,OAAOhB,EAAW,KAAK,IAC7CC,EAAW,MAAQG,EAAS,MAEhC,CAAC,EAEDW,EAAMV,EAAO,IAAM,CACjBd,EAAac,EAAM,KAAK,CAC1B,CAAC"}