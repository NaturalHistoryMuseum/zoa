{"version":3,"file":"common-563d614d.js","sources":["../../node_modules/nanoid/index.browser.js","../../src/components/utils/compid.js","../../node_modules/dettle/dist/now.js","../../node_modules/dettle/dist/debounce.js","../../src/components/inputs/common.js"],"sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { ref } from 'vue';\nimport { nanoid } from 'nanoid';\n\nexport function useComponentId() {\n  const componentId = ref(nanoid(6));\n\n  function subId(name) {\n    return `${componentId.value}__${name}`;\n  }\n\n  return { componentId, subId };\n}\n","/* MAIN */\nconst { now } = Date;\n/* EXPORT */\nexport default now;\n","/* IMPORT */\nimport now from './now.js';\n/* MAIN */\nconst debounce = (fn, wait = 1, options) => {\n    /* VARIABLES */\n    wait = Math.max(1, wait);\n    const leading = options?.leading ?? false;\n    const trailing = options?.trailing ?? true;\n    const maxWait = Math.max(options?.maxWait ?? Infinity, wait);\n    let args;\n    let timeout;\n    let timestampCall = 0;\n    let timestampInvoke = 0;\n    /* HELPERS */\n    const getInstantData = () => {\n        const timestamp = now();\n        const elapsedCall = timestamp - timestampCall;\n        const elapsedInvoke = timestamp - timestampInvoke;\n        const isInvoke = (elapsedCall >= wait || elapsedInvoke >= maxWait);\n        return [timestamp, isInvoke];\n    };\n    const invoke = (timestamp) => {\n        timestampInvoke = timestamp;\n        if (!args)\n            return; // This should never happen\n        const _args = args;\n        args = undefined;\n        fn.apply(undefined, _args);\n    };\n    const onCancel = () => {\n        resetTimeout(0);\n    };\n    const onFlush = () => {\n        if (!timeout)\n            return;\n        onCancel();\n        invoke(now());\n    };\n    const onLeading = (timestamp) => {\n        timestampInvoke = timestamp;\n        if (leading)\n            return invoke(timestamp);\n    };\n    const onTrailing = (timestamp) => {\n        if (trailing && args)\n            return invoke(timestamp);\n        args = undefined;\n    };\n    const onTimeout = () => {\n        timeout = undefined;\n        const [timestamp, isInvoking] = getInstantData();\n        if (isInvoking)\n            return onTrailing(timestamp);\n        return updateTimeout(timestamp);\n    };\n    const updateTimeout = (timestamp) => {\n        const elapsedCall = timestamp - timestampCall;\n        const elapsedInvoke = timestamp - timestampInvoke;\n        const remainingCall = wait - elapsedCall;\n        const remainingInvoke = maxWait - elapsedInvoke;\n        const ms = Math.min(remainingCall, remainingInvoke);\n        return resetTimeout(ms);\n    };\n    const resetTimeout = (ms) => {\n        if (timeout)\n            clearTimeout(timeout);\n        if (ms <= 0)\n            return;\n        timeout = setTimeout(onTimeout, ms);\n    };\n    /* DEBOUNCED */\n    const debounced = (...argsLatest) => {\n        const [timestamp, isInvoking] = getInstantData();\n        const hadTimeout = !!timeout;\n        args = argsLatest;\n        timestampCall = timestamp;\n        if (isInvoking || !timeout)\n            resetTimeout(wait);\n        if (isInvoking) {\n            if (!hadTimeout)\n                return onLeading(timestamp);\n            return invoke(timestamp);\n        }\n    };\n    /* DEBOUNCED UTILITIES */\n    debounced.cancel = onCancel;\n    debounced.flush = onFlush;\n    /* RETURN */\n    return debounced;\n};\n/* EXPORT */\nexport default debounce;\n","import { debounce } from 'dettle';\nimport { computed, ref } from 'vue';\n\nexport function useChangeEmits(emit, props) {\n  /**\n   * Defines common emit functions for when inputs change.\n   * @param emit - The emit object returned by defineEmits in <script setup>.\n   * @param props - The props object returned by defineProps.\n   */\n  let delay;\n  try {\n    delay = parseInt(props.delay) || 0;\n  } catch {\n    delay = 0;\n  }\n\n  const internalModel = ref(null);\n\n  function _emitChange(newValue) {\n    emit('change', newValue);\n  }\n\n  const emitChange = debounce(_emitChange, delay);\n\n  function valueChanged(newValue) {\n    emit('update:modelValue', newValue);\n    internalModel.value = newValue;\n    emitChange(newValue);\n  }\n\n  const value = computed({\n    get() {\n      if (props.modelValue === undefined) {\n        // if there's no container or no v-model set, there won't be a ref to\n        // hold this value, so we store it internally as a backup\n        return internalModel.value;\n      }\n      return props.modelValue;\n    },\n    set(newValue) {\n      valueChanged(newValue);\n    },\n  });\n\n  return { emitChange, valueChanged, value };\n}\n"],"names":["nanoid","size","id","byte","useComponentId","componentId","ref","subId","name","now","debounce","fn","wait","options","leading","trailing","maxWait","args","timeout","timestampCall","timestampInvoke","getInstantData","timestamp","elapsedCall","elapsedInvoke","isInvoke","invoke","_args","onCancel","resetTimeout","onFlush","onLeading","onTrailing","onTimeout","isInvoking","updateTimeout","remainingCall","remainingInvoke","ms","debounced","argsLatest","hadTimeout","useChangeEmits","emit","props","delay","internalModel","_emitChange","newValue","emitChange","valueChanged","value","computed"],"mappings":"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","x_google_ignoreList":[0,2,3]}